./NuSMV -int philosopher.smv

read_model -i q1.smv
flatten_hierarchy
encode_variables
build_model

pick_state -i
simulate -i -k 15
print_reachable_states -v

check_ltlspec -p "G (x >= 0)"
check_ltlspec -p "F (x >= 5)"
check_ltlspec -p "G (request = TRUE -> F status = busy)"



MODULE main
VAR
    total_time : 0 .. 1000;
    torch: {free, taken};
    t0 : 0 .. 20;
    t1 : 0 .. 20;
    t2 : 0 .. 20;
    t3 : 0 .. 20;
    s0 : {waiting_start, crossing, waiting_end};
    s1 : {waiting_start, crossing, waiting_end};
    s2 : {waiting_start, crossing, waiting_end};
    s3 : {waiting_start, crossing, waiting_end};
    location : {start, crossing, end};
    
ASSIGN
    init(torch) := free;
    init(t0) := 5;
    init(t1) := 10;
    init(t2) := 20;
    init(t3) := 25;
    init(s0) := waiting_start;
    init(s1) := waiting_start;
    init(s2) := waiting_start;
    init(s3) := waiting_start;

    next(s0) := case
        s0 = waiting_start: {waiting_start, crossing};
        s0 = waiting_end: {crossing, waiting_end};
        esac;



